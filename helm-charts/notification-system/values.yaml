dockerUsername: sarodesparsh
notificationCore:
  name: notification-core
  serviceName: notification-core-svc
  servicePort: 8080
  replicas: 1
  image: notification-server
  serviceAccountName: notification-core-sa
  configMapName: notification-core-config
  db:
    host: notification-system-mysql
    port: 3306
    database: notification_db
    user: root
    password: root

notificationWorker:
  name: notification-worker
  replicas: 1
  image: notification-worker
  configMapName: notification-worker-config
  env:
    KAFKA_BOOTSTRAP_SERVERS: notification-system-kafka:9092
    SMTP_SERVER: smtp.gmail.com
    SMTP_PORT: "587"
  secrets:
    smtpUsername: "your-email@gmail.com"  # Change this in production
    smtpPassword: "your-app-password"     # Change this in production
    fcmApiKey: "your-fcm-api-key"        # Change this in production

namespace: notification-system
mysql:
  auth:
    rootPassword: root
    database: notification_db
  namespaceOverride: notification-system
  initdbScripts:
    initdb.sql: |
      CREATE DATABASE IF NOT EXISTS notification_db;
      CREATE TABLE notifications (
        user_id VARCHAR(255),
        service_id VARCHAR(255),
        preferences VARCHAR(2048),
        user_data VARCHAR(2048),
        PRIMARY KEY (user_id, service_id)
      )

kafka:
  nameOverride: kafka
  namespaceOverride: notification-system
  replicaCount: 1
  deleteTopicEnable: true
  autoCreateTopicsEnable: true
  defaultReplicationFactor: 1
  numPartitions: 1
  zookeeper:
    enabled: true
  externalAccess:
    enabled: true
    service:
      type: NodePort
      nodePorts: [31092]
  persistence:
    enabled: true
    size: 1Gi

      