---
# service account for the deployment
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.notificationCore.serviceAccountName }}
  # annotations:
  #   kubernetes.io/enforce-mountable-secrets: ""
  namespace: {{ .Values.namespace }}
---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.notificationCore.name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.notificationCore.name }}
spec:
  replicas: {{ .Values.notificationCore.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.notificationCore.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.notificationCore.name }}
    spec:
      serviceAccountName: {{ .Values.notificationCore.serviceAccountName }}
      containers:
      - name: {{ .Values.notificationCore.name }}
        image: {{ .Values.dockerUsername }}/{{ .Values.notificationCore.image }}
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
      volumes:
      - name: config-volume
        configMap:
          name: {{ .Values.notificationCore.configMapName }}
          items:
          - key: config.yaml
            path: config.yaml

---
# service for the deployment
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.notificationCore.serviceName }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.notificationCore.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.notificationCore.servicePort }}
      targetPort: 8080


---
# role for tokenreview
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: validate-tokens-role
  namespace: {{ .Values.namespace }}
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["get","create"]

---
# rolebinding for tokenreview
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: validate-tokens-rolebinding
  namespace: {{ .Values.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: validate-tokens-role
subjects:
- kind: ServiceAccount
  name: {{ .Values.notificationCore.serviceAccountName }}
  namespace: {{ .Values.namespace }}

---
# config map for the deployment
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.notificationCore.configMapName }}
  namespace: {{ .Values.namespace }}
data:
  config.yaml: |-
    db:
      host: {{ .Values.notificationCore.db.host }}
      port: {{ .Values.notificationCore.db.port }}
      database: {{ .Values.notificationCore.db.database }}
      user: {{ .Values.notificationCore.db.user }}
      password: {{ .Values.notificationCore.db.password }}